import{_ as t,c as p,a2 as i,j as a,a as e,G as n,B as h,o as r}from"./chunks/framework.CehHI-68.js";const m=JSON.parse('{"title":"环境要求","description":"","frontmatter":{},"headers":[],"relativePath":"guide/requirement.md","filePath":"zh/guide/requirement.md","lastUpdated":1758637830000}'),o={name:"guide/requirement.md"},d={id:"libvips",tabindex:"-1"};function k(c,s,g,u,b,v){const l=h("Badge");return r(),p("div",null,[s[3]||(s[3]=i(`<h1 id="require" tabindex="-1">环境要求 <a class="header-anchor" href="#require" aria-label="Permalink to &quot;环境要求 {#require}&quot;">​</a></h1><p>兰空图床是使用 <a href="https://php.net" target="_blank" rel="noreferrer">PHP</a> 语言，并使用 <a href="https://laravel.com" target="_blank" rel="noreferrer">Laravel</a> 开发框架开发的一款 Web 应用程序。 使用兰空图床，需要有一个 Web 服务器。常见的 Web 服务器例如：<a href="https://lnmp.com" target="_blank" rel="noreferrer">LNMP</a>(Nginx/MySQL/PHP)、<a href="https://lnmp.org/lnmpa.html" target="_blank" rel="noreferrer">LNMPA</a>(Nginx/MySQL/PHP/Apache)，它们分别都集成了 Web 应用程序必要的组件。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>兰空图床不支持虚拟主机搭建，您必须拥有 Web 服务器的最高控制权，而虚拟主机没有这样的条件。 兰空图床自 v2.3.0 版本后(含)，必须在安装了 <code>SourceGuardian</code> PHP 拓展（名称可能为 sg16）的 PHP 环境中运行。</p></div><h3 id="php-requires" tabindex="-1">PHP 要求 <a class="header-anchor" href="#php-requires" aria-label="Permalink to &quot;PHP 要求 {#php-requires}&quot;">​</a></h3><p>您应该确保您的 Web 服务器具有以下最低 PHP 版本和扩展：</p><ul><li>PHP 版本 &gt;= 8.2</li><li>SourceGuardian PHP 拓展（在宝塔面板中名称为 sg16）</li><li>Ctype PHP 扩展</li><li>cURL PHP 扩展</li><li>DOM PHP 扩展</li><li>Fileinfo PHP 扩展</li><li>Filter PHP 扩展</li><li>Hash PHP 扩展</li><li>Mbstring PHP 扩展</li><li>OpenSSL PHP 扩展</li><li>PCRE PHP 扩展</li><li>PDO PHP 扩展</li><li>Session PHP 扩展</li><li>Tokenizer PHP 扩展</li><li>XML PHP 扩展</li><li>Imagick PHP 拓展</li><li>Pcntl PHP 拓展</li><li>Zip PHP 拓展</li></ul><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果你使用了云服务集成面板，控制面板厂商为了极致的安全追求，会将 PHP 的部分函数禁用，这些被禁用的函数中就包含一些程序运行时必要的函数，这时候您需要找到 PHP 的配置文件，搜索 <code>disable_functions</code> 配置项，将那些函数从这个配置项中移除。</p></div><div class="info custom-block"><p class="custom-block-title">提示</p><p>通常情况下，这些拓展大部分都是已经安装并启用了的，程序安装时会检测必要的拓展是否安装，未通过检测则无法进行安装。</p></div><h3 id="databases" tabindex="-1">数据库 <a class="header-anchor" href="#databases" aria-label="Permalink to &quot;数据库 {#databases}&quot;">​</a></h3><ul><li>MariaDB 10.3+</li><li>MySQL 5.7+</li><li>PostgreSQL 10.0+（PHP 需要安装 pgsql 拓展）</li><li>SQLite 3.35.0+</li><li>SQL Server 2017+（PHP 需要安装 sqlsrv 和 pdo_sqlsrv 拓展，以及它们可能需要的任何依赖项，例如 Microsoft SQL ODBC 驱动程序）</li></ul><h2 id="server-configuration" tabindex="-1">服务器配置 <a class="header-anchor" href="#server-configuration" aria-label="Permalink to &quot;服务器配置 {#server-configuration}&quot;">​</a></h2><h3 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;Nginx {#nginx}&quot;">​</a></h3><p>我们推荐您使用 Nginx + PostgreSQL 作为组合来搭建兰空图床，PostgreSQL 可以更好的承受高并发上传请求。您也可以使用 Sqlite，以实现最小化安装。</p><h3 id="supervisor" tabindex="-1">Supervisor <a class="header-anchor" href="#supervisor" aria-label="Permalink to &quot;Supervisor {#supervisor}&quot;">​</a></h3><p>兰空图床使用消息队列来异步运行程序中的耗时任务，而启动消息队列服务，需要使用 PHP 的 CLI 模式，即通过命令终端执行：<code>php artisan queue:work</code> 使其正常运作。</p><p>在生产环境中，您需要一种方法来保持您的 <code>queue:work</code> 进程运行。<code>queue:work</code> 进程可能会因各种原因停止运行，例如超过工作者超时或执行 <code>queue:restart</code> 命令。</p><p>因此，您需要配置一个进程监视器，可以检测您的 <code>queue:work</code> 进程何时退出并自动重启它们。此外，进程监视器可以让您指定希望同时运行多少个 <code>queue:work</code> 进程。</p><p>Supervisor 是 Linux 环境中常用的进程监视器，我们将在以下文档中讨论如何配置它，或者你也可以选择其他任务你熟悉的进程管理软件。在正式安装之前，我们建议你先浏览一遍该示例文档。</p><details class="details custom-block"><summary>Supervisor 安装以及配置教程(示例)</summary><h4 id="install-supervisor" tabindex="-1">安装 Supervisor <a class="header-anchor" href="#install-supervisor" aria-label="Permalink to &quot;安装 Supervisor {#install-supervisor}&quot;">​</a></h4><p>Supervisor 是 Linux 操作系统的进程监视器，如果 <code>queue:work</code> 进程失败，它将自动重启它们。要在 Ubuntu 上安装 Supervisor，您可以使用以下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supervisor</span></span></code></pre></div><h4 id="configure-supervisor" tabindex="-1">配置 Supervisor <a class="header-anchor" href="#configure-supervisor" aria-label="Permalink to &quot;配置 Supervisor {#configure-supervisor}&quot;">​</a></h4><p>Supervisor 配置文件通常存储在 <code>/etc/supervisor/conf.d</code> 目录中。在此目录中，您可以创建任意数量的配置文件，指示 supervisor 如何监视您的进程。例如，让我们创建一个 <code>lsky-pro-worker.conf</code> 文件，用来启动和监视 <code>queue:work</code> 进程：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[program:lsky-pro-worker]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">process_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=%(program_name)s_%(process_num)02d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=php /www/wwwroot/app.com/artisan queue:work</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">autostart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">autorestart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stopasgroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">killasgroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=www</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">numprocs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">redirect_stderr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stdout_logfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/www/wwwroot/app.com/storage/logs/worker.log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stopwaitsecs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=3600</span></span></code></pre></div><p>在此示例中，<code>numprocs</code> 指令将指示 Supervisor 运行一个 <code>queue:work</code> 进程，并监视所有进程，如果它们失败，则自动重启它们。您应更改配置中的 <code>command</code> 指令，以反映您所需的队列连接和工作者选项。</p><h4 id="start-supervisor" tabindex="-1">启动 Supervisor <a class="header-anchor" href="#start-supervisor" aria-label="Permalink to &quot;启动 Supervisor {#start-supervisor}&quot;">​</a></h4><p>创建配置文件后，您可以使用以下命令更新 Supervisor 配置并启动进程：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supervisorctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reread</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supervisorctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supervisorctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;lsky-pro-worker:*&quot;</span></span></code></pre></div><p>有关 Supervisor 的更多信息，请查阅 <a href="http://supervisord.org/index.html" target="_blank" rel="noreferrer">Supervisor 文档</a>。</p></details><h3 id="image-magick" tabindex="-1">ImageMagick <a class="header-anchor" href="#image-magick" aria-label="Permalink to &quot;ImageMagick {#image-magick}&quot;">​</a></h3><p><a href="https://github.com/ImageMagick/ImageMagick" target="_blank" rel="noreferrer">ImageMagick</a> 是一款免费的开源软件套件，用于编辑和处理数字图像。它可用于创建、编辑、合成或转换位图图像，并支持多种文件格式，包括 JPEG、PNG、GIF、TIFF 和 PDF。</p><p>兰空图床依赖 php imagick 拓展，调用操作系统的 ImageMagick 软件实现图片编辑能力。</p><p>注意，php imagick 拓展和 ImageMagick 软件是两个东西，这两个都是必须要安装的。</p><p>ImageMagick 是一个独立的软件工具，用于在命令行操作图像（如转换格式、调整大小、添加效果等），而 php imagick 拓展是 PHP 的一个扩展库，它提供了 ImageMagick 的 PHP 接口，用于在 PHP 程序中调用 ImageMagick 的功能。</p><details class="details custom-block"><summary>ImageMagick 安装教程(示例)</summary><h4 id="检查系统是否安装-imagemagick" tabindex="-1">检查系统是否安装 imageMagick <a class="header-anchor" href="#检查系统是否安装-imagemagick" aria-label="Permalink to &quot;检查系统是否安装 imageMagick&quot;">​</a></h4><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Dd2Bi" id="tab-dk1cn1g" checked><label data-title="Ubuntu/Debian" for="tab-dk1cn1g">Ubuntu/Debian</label><input type="radio" name="group-Dd2Bi" id="tab-9JFNUXt"><label data-title="CentOS/RHEL" for="tab-9JFNUXt">CentOS/RHEL</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> imagemagick</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ImageMagick</span></span></code></pre></div></div></div><p>如果没有任何输出则表示没有安装。</p><h4 id="install" tabindex="-1">安装 <a class="header-anchor" href="#install" aria-label="Permalink to &quot;安装 {#install}&quot;">​</a></h4><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-TVutb" id="tab-DQ62vvH" checked><label data-title="Ubuntu/Debian" for="tab-DQ62vvH">Ubuntu/Debian</label><input type="radio" name="group-TVutb" id="tab-p6c0F9b"><label data-title="CentOS/RHEL" for="tab-p6c0F9b">CentOS/RHEL</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> imagemagick</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ImageMagick</span></span></code></pre></div></div></div><p>有关 imageMagick 的更多信息，请查阅 <a href="https://imagemagick.org" target="_blank" rel="noreferrer">imageMagick 文档</a>。</p></details>`,25)),a("h3",d,[s[0]||(s[0]=e("Libvips ")),n(l,{type:"tip",text:"推荐"}),s[1]||(s[1]=e()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#libvips","aria-label":'Permalink to "Libvips <Badge type="tip" text="推荐" /> {#libvips}"'},"​",-1))]),s[4]||(s[4]=i(`<p><a href="https://github.com/libvips/libvips" target="_blank" rel="noreferrer">Libvips</a> 是一个需求驱动的水平线程图像处理库。与同类库相比，libvips 运行速度更快，占用内存更少。兰空图床同时支持 <code>ImageMagick</code> 和 <code>Libvips</code> 两种不同驱动来处理图片，但是 <code>Libvips</code> 是可选项。</p><p>如果可以，我们更推荐使用 <code>libvips</code> 库作为兰空图床图片处理驱动。</p><details class="details custom-block"><summary>Libvips 安装教程(示例)</summary><p>Libvips 可以访问 <a href="https://github.com/libvips/libvips/tags" target="_blank" rel="noreferrer">https://github.com/libvips/libvips/tags</a> 找到不同版本预编译的二进制二进制文件，详细的安装教程请访问：<a href="https://www.libvips.org/install.html" target="_blank" rel="noreferrer">https://www.libvips.org/install.html</a></p><h4 id="install-php-vips" tabindex="-1">安装 PHP 拓展 <a class="header-anchor" href="#install-php-vips" aria-label="Permalink to &quot;安装 PHP 拓展 {#install-php-vips}&quot;">​</a></h4><p>给服务器安装好 libvips 库后，与 ImageMagick 相同，也需要给 PHP 安装 <code>vips</code> 拓展，安装命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pecl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vips</span></span></code></pre></div><p>安装完成后，在 <code>php.ini</code> 中加入：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=vips.so</span></span></code></pre></div><p>检查是否安装成功：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vips</span></span></code></pre></div><p>你也可以手动编译安装 PHP vips 拓展</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载源码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/libvips/php-vips-ext.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> php-vips-ext</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译并安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">phpize</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>然后在 <code>php.ini</code> 中启用：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=vips.so</span></span></code></pre></div><h4 id="enable-php-ffi" tabindex="-1">启用 FFI 拓展 <a class="header-anchor" href="#enable-php-ffi" aria-label="Permalink to &quot;启用 FFI 拓展 {#enable-php-ffi}&quot;">​</a></h4><p>还需要安装 PHP FFI 拓展并启用，检查是否安装 ffi 拓展：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FFI</span></span></code></pre></div><p>如果输出 ffi，说明已经启用。如果没有，可能需要安装并启用。</p><p>我们以宝塔的 PHP 8.2 为例，演示如何安装 ffi 拓展：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /www/server/php/82/src/ext/ffi</span></span></code></pre></div><p>编译扩展</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">www/server/php/82/bin/phpize</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-php-config=/www/server/php/82/bin/php-config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>安装成功后，编辑配置文件：<code>/www/server/php/82/etc/php.ini</code>，搜索 <code>ffi</code>，增加配置以启用：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ffi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ffi.enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1</span></span></code></pre></div><p>重新执行 <code>php -m | grep FFI</code> 命令查看结果，如果输出 ffi，表示已经安装成功。</p></details><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在我们的 docker 镜像中，默认使用 <code>Libvips</code> 库作为图片处理驱动。</p></div><h3 id="summary" tabindex="-1">总结 <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;总结 {#summary}&quot;">​</a></h3><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>综上所述，搭建兰空图片的必要条件为：</p><ul><li>使用 Nginx 或 Apache 作为 Web 服务器</li><li>PHP 的版本和拓展必须达到要求</li><li>数据库版本必须达到要求</li><li>服务器需要安装 ImageMagick 和进程管理软件</li><li>如果可以，我们更推荐使用 Libvips 而非 ImageMagick</li></ul></div>`,6))])}const y=t(o,[["render",k]]);export{m as __pageData,y as default};

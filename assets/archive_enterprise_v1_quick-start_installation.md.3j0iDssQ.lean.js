import{_ as i,c as a,a2 as e,o as l}from"./chunks/framework.CehHI-68.js";const t="/archive/installation/php-version.png",p="/archive/installation/php-modules.png",n="/archive/bt-supervisor-config.png",o="/archive/bt-crontab-config.png",v=JSON.parse('{"title":"安装","description":"安装 Lsky Pro 企业版本","frontmatter":{"title":"安装","description":"安装 Lsky Pro 企业版本"},"headers":[],"relativePath":"archive/enterprise/v1/quick-start/installation.md","filePath":"zh/archive/enterprise/v1/quick-start/installation.md","lastUpdated":1745666574000}'),h={name:"archive/enterprise/v1/quick-start/installation.md"};function c(r,s,d,k,g,u){return l(),a("div",null,s[0]||(s[0]=[e('<div class="warning custom-block"><p class="custom-block-title">请注意</p><p>兰空图床不支持共享型虚拟主机(不支持安装拓展、修改 php.ini 等操作)安装</p></div><h2 id="推荐运行环境" tabindex="-1">推荐运行环境 <a class="header-anchor" href="#推荐运行环境" aria-label="Permalink to &quot;推荐运行环境&quot;">​</a></h2><ul><li>Nginx 1.21+</li><li>Mysql 5.7+</li><li>PHP 8.2+</li><li>Redis 7.0+</li><li>Supervisor</li></ul><h2 id="第一步-准备安装" tabindex="-1">第一步，准备安装 <a class="header-anchor" href="#第一步-准备安装" aria-label="Permalink to &quot;第一步，准备安装&quot;">​</a></h2><ol><li>使用 <code>php -v</code> 命令查看并确认 cli php 命令行版本是否符合要求，最低需要 8.1。</li></ol><p><img src="'+t+'" alt="php version"></p><ol start="2"><li>使用命令确保已经安装必要的拓展：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fileinfo|mysqli|curl|mbstring|imagick|openssl|PDO|redis|session&#39;</span></span></code></pre></div><p><img src="'+p+`" alt="php modules"></p><p>然后打开 <code>php.ini</code> 文件，搜索查找 <code>disable_functions</code>，将该值清空，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>...</span></span>
<span class="line"><span>; This directive allows you to disable certain functions.</span></span>
<span class="line"><span>; It receives a comma-delimited list of function names.</span></span>
<span class="line"><span>; https://php.net/disable-functions</span></span>
<span class="line"><span>disable_functions = </span></span>
<span class="line"><span>...</span></span></code></pre></div><p>清空后重启 PHP 服务。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li>通常情况下大部分拓展都是预装的，如果没有需要自行编译安装。</li><li>必须程序必须用到的拓展有且不限于 <code>curl</code>、<code>fileinfo</code>、<code>ftp</code>、<code>imagick</code>、<code>PDO</code>、<code>openssl</code>、<code>pcntl</code>、<code>redis</code>、<code>zip</code></li><li>可选拓展 <code>pgsql</code>、<code>pdo_pgsql</code>、<code>sqlite3</code>、<code>pdo_sqlite</code></li></ul></div><h2 id="第二步-准备运行环境" tabindex="-1">第二步，准备运行环境 <a class="header-anchor" href="#第二步-准备运行环境" aria-label="Permalink to &quot;第二步，准备运行环境&quot;">​</a></h2><ol><li>先创建站点和数据库，然后关闭站点的防跨站攻击功能，设置伪静态。Nginx 如下：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>location / {</span></span>
<span class="line"><span>  try_files $uri $uri/ /index.php?$query_string;</span></span>
<span class="line"><span>}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>请正确配置伪静态，否则可能会导致邮件验证等功能失效。</p></div><ol start="2"><li>将安装包上传至站点目录中，并将程序的运行目录设置为 <code>public</code>，<a href="https://serverfault.com/a/604307" target="_blank" rel="noreferrer">如何设置？</a>。</li><li>将程序所在目录的所有文件夹、子文件夹、文件的权限，用户组和所有者改为 www，权限改为 0755</li></ol><blockquote><p>通常情况下，Web 站点目录的所有者和用户组为 www:www</p></blockquote><h2 id="第三步-初始化配置" tabindex="-1">第三步，初始化配置 <a class="header-anchor" href="#第三步-初始化配置" aria-label="Permalink to &quot;第三步，初始化配置&quot;">​</a></h2><ol><li>进入终端，执行命令生成 key</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key:generate</span></span></code></pre></div><ol start="2"><li>编辑根目录中的 <code>.env</code> 文件，如果没有该文件可以将 <code>.env.example</code> 复制一份并重命名为 <code>.env</code> ，然后修改对应的配置值： <ul><li><code>APP_URL</code>=站点域名(需要 http(s): //，例如 <a href="https://pic.iqy.ink" target="_blank" rel="noreferrer">https://pic.iqy.ink</a>)</li><li><code>APP_SERIAL_NO</code>=购买后得到的授权密钥</li><li><code>APP_SECRET</code>=许可证的密钥，固定为：LskyPro</li><li><code>REDIS_HOST</code>=Redis 连接地址(默认为 127.0.0.1)</li><li><code>REDIS_PASSWORD</code>=Redis 连接密码(默认为 null，表示没有密码)</li><li><code>REDIS_PORT</code>=Redis 连接端口(默认为 6379)</li></ul></li></ol><h2 id="第四步-开始安装" tabindex="-1">第四步，开始安装 <a class="header-anchor" href="#第四步-开始安装" aria-label="Permalink to &quot;第四步，开始安装&quot;">​</a></h2><p>上述步骤完成以后，即可访问站点首页，程序会自动跳转至图形化安装页面，根据指引完成数据库配置、管理员账号配置等。</p><h2 id="最后一步-命令行配置-重要" tabindex="-1">最后一步，命令行配置(重要) <a class="header-anchor" href="#最后一步-命令行配置-重要" aria-label="Permalink to &quot;最后一步，命令行配置(重要)&quot;">​</a></h2><p>兰空图床企业版需要通过 <a href="http://www.php-cli.com/" target="_blank" rel="noreferrer">php cli</a> 的方式启动队列、计划任务处理进程，此操作需要登录 SSH。</p><h4 id="_1-配置队列处理进程" tabindex="-1">1. 配置队列处理进程 <a class="header-anchor" href="#_1-配置队列处理进程" aria-label="Permalink to &quot;1. 配置队列处理进程&quot;">​</a></h4><p>命令行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> queue:work</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --queue=emails,images,thumbnails</span></span></code></pre></div><p>在站点根目录下执行命令 <code>php artisan queue:work</code> 来启动队列处理进程，但是注意，手动停止或关闭终端后此命令会停止，所以我们需要通过其他命令(nohup、screen)来使该命令在后台运行。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>由于兰空图床会在每次升级后安全退出队列进程，如果您使用上述的方式运行队列，请不要忘了在程序更新后手动重启队列。</p></div><p>除了上述命令的方式，我们更推荐使用 <a href="http://supervisord.org/" target="_blank" rel="noreferrer">Supervisor</a> 来保持进程持续运行。服务器安装 Supervisor 的步骤请自行搜索相关文档，此处不再赘述。</p><p>假设我们的项目绝对路径为 <code>/www/wwwroot/lsky-pro</code>，以下是 supervisor 子配置文件。</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[program:lsky-pro-worker]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">process_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=%(program_name)s_%(process_num)02d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=php artisan queue:work --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">queue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=emails,images,thumbnails</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">directory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/www/wwwroot/lsky-pro/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">numprocs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">autorestart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">startsecs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">startretries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stdout_logfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/www/wwwroot/lsky-pro/storage/logs/supervisor.out.log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stderr_logfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/www/wwwroot/lsky-pro/storage/logs/supervisor.err.log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stdout_logfile_maxbytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=2MB</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">stderr_logfile_maxbytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=2MB</span></span></code></pre></div><p>创建配置文件后，您可以使用以下命令更新 Supervisor 配置并启动进程：</p><ul><li><code>sudo supervisorctl reread</code></li><li><code>sudo supervisorctl update</code></li><li><code>sudo supervisorctl start lsky-pro-worker:*</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>宝塔面板集成了 Supervisor 软件，安装后可以直接使用，无需配置，如下图所示：</p></div><p><img src="`+n+'" alt="supervisor-config"></p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>如果进程无法启动，请尝试解禁 PHP 的 <code>pcntl_signal</code>、<code>pcntl_alarm</code> 函数。</p></div><h4 id="_2-配置计划任务处理进程" tabindex="-1">2. 配置计划任务处理进程 <a class="header-anchor" href="#_2-配置计划任务处理进程" aria-label="Permalink to &quot;2. 配置计划任务处理进程&quot;">​</a></h4><p>计划任务需要用到 linux 中的 Crontab，我们还是假设项目绝对路径为 <code>/www/wwwroot/lsky-pro</code>，登录 SSH 后，执行以下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crontab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span></span></code></pre></div><p>执行后会进入 vim 编辑页面，按 <code>i</code> 键进入编辑模式，输入以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cd /www/wwwroot/lsky-pro &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schedule:run</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span></span></code></pre></div><p>然后(或按住 <code>shift</code> + <code>:</code>），输入 <code>eq</code> 后回车保存。</p><p>重启 crontab 服务</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crond</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>宝塔面板集成了可视化计划任务配置页面，可以直接使用，无需配置，如下图所示：</p></div><p><img src="'+o+'" alt="crontab-config"></p><p>至此，完成安装。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li>队列和计划任务未配置成功会导致上传图片后无法生成缩略图、邮件无法发送、水印无法处理等异常情况。</li><li>验证队列处理进程有没有正确配置，可以通过查看上传的图片是否生成了缩略图进行判断。</li></ul></div>',52)]))}const y=i(h,[["render",c]]);export{v as __pageData,y as default};

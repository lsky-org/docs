import{_ as i,c as a,a2 as t,o as n}from"./chunks/framework.CehHI-68.js";const E=JSON.parse('{"title":"分离部署","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/separate-deploy.md","filePath":"zh/advanced/separate-deploy.md","lastUpdated":1757227305000}'),p={name:"advanced/separate-deploy.md"};function h(l,s,e,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="separate-deploy" tabindex="-1">分离部署 <a class="header-anchor" href="#separate-deploy" aria-label="Permalink to &quot;分离部署 {#separate-deploy}&quot;">​</a></h1><p>兰空图床为了实现最小化安装，简化安装步骤，默认是使用混合部署的方式，即前后端分离架构，前端使用 laravel 的模板引擎渲染前端。具体解释请查阅<a href="./theme#theme-works">主题</a>章节。</p><p>如果您希望将前后端分开独立部署，操作起来非常简单。</p><h2 id="change-build-script" tabindex="-1">修改构建脚本 <a class="header-anchor" href="#change-build-script" aria-label="Permalink to &quot;修改构建脚本 {#change-build-script}&quot;">​</a></h2><p>打开 <code>web/package.json</code> 文件，修改构建脚本：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line diff remove"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;run-p type-check </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build-only {@}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -- &amp;&amp; run-s pre-build post-build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;run-p type-check </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">build-only {@}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build-only&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;type-check&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vue-tsc --build --force&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pre-build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shx rm -rf ../app/Themes/Default/assets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;post-build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shx mv dist/index.html ../app/Themes/Default/views/index.blade.php &amp;&amp; shx mv dist/DefaultTheme.php ../app/Themes/Default/DefaultTheme.php &amp;&amp; shx cp -r dist/assets ../app/Themes/Default/ &amp;&amp; shx rm -rf dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;openapi-ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;openapi-ts&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div><p>修改环境变量 <code>web/.env.production</code> 文件：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_APP_TITLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Lsky Pro+&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 站点标题</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_APP_API_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:8000/api/v2&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 接口地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_APP_ICON_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/assets/favicon.ico&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # favicon 图标地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_APP_KEYWORDS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;图床, 在线图床, 图片外链, 免费图床, 图片上传, 图片存储, 图片分享, 博客配图, 网站配图，兰空图床, Lsky Pro+&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 网站关键字</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_APP_DESCRIPTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;快速稳定的在线图床服务，支持图片上传、存储与外链分享，适合博客、论坛和网站使用，助你轻松管理和分发图片资源。&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 网站描述</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_APP_DEFAULT_LOCALE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=zh-CN </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 前端默认语言</span></span></code></pre></div><h2 id="build" tabindex="-1">构建前端代码 <a class="header-anchor" href="#build" aria-label="Permalink to &quot;构建前端代码 {#build}&quot;">​</a></h2><p>然后执行构建命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h2 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h2><p>打包后的静态文件默认在 <code>web/dist</code> 目录，我们只需要在目标服务器创建一个站点，将此目录中的所有文件上传至站点中即可。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>如果您希望原站点中的前端禁止访问，您可以访问后台管理进入「系统设置」-&gt;「控制中心」关闭 “是否启用站点” 选项。</p><p>关于以后访问站点首页，将显示 404 状态（无论使用的是哪一种主题）。届时需要使用独立部署的前端站点域名您的图床网站首页。</p></div>`,14)]))}const u=i(p,[["render",h]]);export{E as __pageData,u as default};
